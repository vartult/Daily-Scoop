@Suppress("unused", "MayBeConstant")
object Dependencies {
    val gradle = "com.android.tools.build:gradle:${Versions.gradle}"
    val junit = "junit:junit:${Versions.junit}"
    val support_appcompat = "androidx.appcompat:appcompat:${Versions.appCompat}"
    val constraint_layout = "androidx.constraintlayout:constraintlayout:${Versions.constraint}"
    val liveData_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.liveDataKtx}"
    val support_design = "com.google.android.material:material:${Versions.material}"
    val support_card_view = "androidx.cardview:cardview:${Versions.androidX}"
    val support_recycler_view = "androidx.recyclerview:recyclerview:${Versions.androidX}"
    val kotlin_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
    val kotlin_stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    val arch_lifecycle = "android.arch.lifecycle:extensions:${Versions.archComponent}"
    val arch_room = "android.arch.persistence.room:runtime:${Versions.archComponent}"
    val arch_room_compiler = "android.arch.persistence.room:compiler:${Versions.archComponent}"
    val arch_core_testing = "android.arch.core:core-testing:${Versions.archCoreTesting}"
    val dagger = "com.google.dagger:dagger:${Versions.dagger}"
    val dagger_compiler = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    val dagger_android = "com.google.dagger:dagger-android:${Versions.dagger}"
    val dagger_android_support = "com.google.dagger:dagger-android-support:${Versions.dagger}"
    val dagger_android_compiler = "com.google.dagger:dagger-android-processor:${Versions.dagger}"
    val rx_java = "io.reactivex.rxjava2:rxjava:${Versions.rxJava}"
    val rx_android = "io.reactivex.rxjava2:rxandroid:${Versions.rxAndroid}"
    val preference_room = "com.github.skydoves:preferenceroom:${Versions.preferenceRoom}"
    val preference_room_compiler = "com.github.skydoves:preferenceroom-processor:${Versions.preferenceRoom}"
    val retrofit = "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    val retrofit_gson = "com.squareup.retrofit2:converter-gson:${Versions.retrofit}"
    val gson = "com.google.code.gson:gson:${Versions.gson}"
    val timber = "com.jakewharton.timber:timber:${Versions.timber}"
    val memory_leak_debug = "com.squareup.leakcanary:leakcanary-android:${Versions.memoryLeak}"
    val glide = "com.github.bumptech.glide:glide:${Versions.glide}"
    val glide_compiler = "com.github.bumptech.glide:compiler:${Versions.glide}"
    val base_adapter = "com.github.skydoves:baserecyclerviewadapter:${Versions.baseAdapter}"
    val android_veil = "com.github.skydoves:androidveil:${Versions.androidVeil}"
    val mockito = "org.mockito:mockito-core:${Versions.mockito}"
    val mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:${Versions.mockitoKotlin}"
    val mockito_android = "org.mockito:mockito-android:${Versions.mockito}"
    val mock_web_server = "com.squareup.okhttp3:mockwebserver:${Versions.mockWebServer}"
    val espresso = "com.android.support.test.espresso:espresso-core:${Versions.espresso}"
    val jaxb_core = "com.sun.xml.bind:jaxb-core:${Versions.jaxbCore}"
    val jaxb_api = "javax.xml.bind:jaxb-api:${Versions.jaxbApi}"
    val jaxb_impl = "com.sun.xml.bind:jaxb-impl:${Versions.jaxbImpl}"
    val android_junit_runner = "androidx.test.runner.AndroidJUnitRunner"
}